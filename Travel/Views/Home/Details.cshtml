@model Travel.Models.Place

@{
    ViewData["Title"] = "Подробиці";
}

@{
    Context.Session.SetInt32("PlaceId", Model.Id);
}

@using Microsoft.AspNetCore.Identity
@using Travel.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    bool IsSelected = false;
    string applicationUserId = string.Empty;
    int placeId = Model.Id;
    ApplicationUser? user = await UserManager.GetUserAsync(User);
    Select? select;
    if (ViewBag.Select != null && ViewBag.Select is Select)
    {
        select = ViewBag.Select;
        IsSelected = select.IsSelected;
    }
    if (user != null)
    {
        applicationUserId = user.Id;
    }
}


<h1>Подробиці</h1>

<div>
    <h4>Місце</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ApplicationUser.UserName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ApplicationUser.UserName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Data)
        </dt>
        <dd class = "col-sm-10">
            @if(Model.Data != null)
            {
                <img class="placesDetailsImage" 
                    src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.Data))" />
            }
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Country)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Country)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index">Повернутись до списку</a>
</div>
@if (user != null)
{
    <div class="authorized">
        <a asp-controller="Marks" asp-action="Mark">Оцінити</a>
        <label>
            <input type="checkbox" checked=@IsSelected class="select" 
                data-user-id="@applicationUserId" data-place-id="@placeId" />
            Обране
        </label>
    </div>
}

<h3>Оцінки</h3>
@if (ViewBag.Marks != null && ViewBag.Marks is List<Mark>)
{
    List<Mark> marks = ViewBag.Marks;
    foreach (Mark mark in marks)
    {
        <div class="markCard shadow">
            <div class="markCard__mark">
                <p>@mark.ApplicationUser.UserName</p>
                <p>Оцінка: @mark.Point</p>
                <p>@mark.Created</p>
            </div>
            <div class="markCard__Commentary">@mark.Commentary</div>
        </div>
    }
}

<script>
    // Коли документ (сторінка) завантажився.
    document.addEventListener("DOMContentLoaded", documentReady);

    function documentReady() {
        const selectCheckbox = document.querySelector('.select');
        // console.log(selectCheckbox);
        if (selectCheckbox != null) {
            selectCheckbox.addEventListener("click", function (event) { 
                // console.log(selectCheckbox.checked);
                // let d = selectCheckbox.dataset;
                // console.log(d);
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SelectCheckAjax", "Selects")",
                    data: {
                        userId: selectCheckbox.dataset.userId,
                        placeId: selectCheckbox.dataset.placeId,
                        placeChecked: selectCheckbox.checked
                    },
                    dataType: "text",
                    success: function (message) {
                        console.log(message);
                    },
                    error: function (req, status, error) {
                        console.log(error);
                    }
                });
            });
        }
    }
</script>
